generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  name String?
  mail      String?   @db.VarChar(255)
  password String? @db.VarChar(255)
  isActive Boolean @db.TinyInt
  deletedAt DateTime? @db.DateTime(0)
  createdAt DateTime? @default(now())
  blog Blog[]
}

model Blog {
  id        Int       @id @default(autoincrement())
  title     String?   @db.VarChar(255)
  content   String?   @db.VarChar(255)
  link      String?   @db.VarChar(255)
  publish   Boolean   @db.TinyInt
  user     User    @relation(fields:[userId] ,references: [id])
  userId Int   @db.Int()
  deletedAt DateTime? @db.DateTime(0)
  createdAt DateTime? @default(now())
}

model ActivityLogs {
  id        Int       @id @default(autoincrement())
  date      String? @db.VarChar(255)
  description String? @db.VarChar(255)
  deletedAt DateTime? @db.DateTime(0)
  createdAt DateTime? @default(now())
  workLogs WorkLogs[]
}

model WorkLogs {
  id        Int       @id @default(autoincrement())
  activityLogs ActivityLogs @relation(fields: [activityLogId], references: [id])
  activityLogId Int @db.Int()
  title String? @db.VarChar(255)
  description String @db.VarChar(255)
  content String @db.VarChar(255)
  deletedAt DateTime? @db.DateTime(0)
  createdAt DateTime? @default(now())
}


// model Users {
//   id      Int      @id @default(autoincrement())
//   profile Profile?
// }

// model Profile {
//   id     Int  @id @default(autoincrement())
//   users   Users @relation(fields: [userId], references: [id])
//   userId Int  @unique // relation scalar field (used in the `@relation` attribute above)
// }